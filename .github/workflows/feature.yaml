name: Build, Test & Deploy

on:
  push:
    branches:
    - feature/*
    - hotfix/*

env:
  FUNCTIONAPP_PATH: 'src/YouTubeWebSubSubscriptionHandler.FunctionApp'

jobs:
  arm_template_build_test:
    name: 'WIP: ARM Templates Build & Test'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Run Bicep build
      uses: aliencube/bicep-build-actions@v0.1
      with:
        files: '**/*.bicep'

    - name: Run ARM TTK
      uses: aliencube/arm-ttk-actions@v0.3
      id: armtest
      with:
        path: ./resources

    - name: Show ARM TTK test result
      shell: bash
      continue-on-error: true
      run: |
        echo 'Results: ${{ toJSON(fromJSON(steps.armtest.outputs.results)) }}'

  functionapp_build_test_deploy_dev:
    name: 'WIP: FunctionApp Build & Test'
    needs:
    - arm_template_build_test

    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_DEV }}

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Restore NuGet packages
      shell: bash
      run: |
        dotnet restore .

    - name: Build solution
      shell: bash
      run: |
        dotnet build . -c Release

    - name: Test solution
      shell: bash
      run: |
        dotnet test . -c Release

    - name: Create FunctionApp artifact
      shell: bash
      run: |
        dotnet publish ${{ env.FUNCTIONAPP_PATH }} -c Release -o published

    - name: Get FunctionApp publish profile
      id: publishprofile
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS_DEV }}
      with:
        resourceGroupName: ${{ secrets.RESOURCE_GROUP_NAME_DEV }}
        appName: ${{ secrets.RESOURCE_FUNCTIONAPP_NAME_DEV }}

    - name: Deploy FunctionApp
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ secrets.RESOURCE_FUNCTIONAPP_NAME_DEV }}
        package: published
        publish-profile: ${{ steps.publishprofile.outputs.profile }}

    - name: Reset FunctionApp publish profile
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS_DEV }}
      with:
        resourceGroupName: ${{ secrets.RESOURCE_GROUP_NAME_DEV }}
        appName: ${{ secrets.RESOURCE_FUNCTIONAPP_NAME_DEV }}
        reset: true

    - name: Update FunctionApp settings
      uses: azure/CLI@v1
      with:
        inlineScript: |
          settings=$(az functionapp config appsettings set \
            -g ${{ secrets.RESOURCE_GROUP_NAME_DEV }} \
            -n ${{ secrets.RESOURCE_FUNCTIONAPP_NAME_DEV }} \
            --settings WebSub__CallbackKey=$(az functionapp function keys list \
              -g ${{ secrets.RESOURCE_GROUP_NAME_DEV }} \
              -n ${{ secrets.RESOURCE_FUNCTIONAPP_NAME_DEV }} \
              --function-name ${{ secrets.RESOURCE_FUNCTION_NAME_CALLBACK }} \
              --query "default" \
              -o tsv))

    - name: Run Bicep build
      uses: aliencube/bicep-build-actions@v0.1
      with:
        files: '**/*.bicep'

    - name: Deploy ARM templates
      uses: Azure/arm-deploy@v1.0.1
      with:
        subscriptionId: ${{ secrets.SUBSCRIPTION_ID_DEV }}
        resourceGroupName: ${{ secrets.RESOURCE_GROUP_NAME_DEV }}
        deploymentName: 'ytwebsub'
        template: 'resources/logappdeploy.subscription.json'
        parameters: name=${{ secrets.RESOURCE_NAME }} env=${{ secrets.RESOURCE_ENVIRONMENT_DEV }} locationCode=${{ secrets.RESOURCE_LOCATION_CODE }} logicAppSubscriptionTopicUri=${{ secrets.YOUTUBE_TOPIC_URL_DEV }}
