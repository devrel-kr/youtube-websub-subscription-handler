{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string"
    },
    "env": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ]
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "locationCode": {
      "type": "string",
      "defaultValue": "krc"
    },
    "youTubeChannelId": {
      "type": "string"
    },
    "youTubeEventType": {
      "type": "string",
      "defaultValue": "com.youtube.video.converted"
    },
    "youTubeTitleSegment": {
      "type": "string"
    },
    "linkedInUsername": {
      "type": "string"
    }
  },
  "functions": [],
  "variables": {
    "metadata": {
      "longName": "[format('{{0}}-{0}-{1}-{2}{{1}}', parameters('name'), parameters('env'), parameters('locationCode'))]",
      "shortName": "[format('{{0}}{0}{1}{2}', parameters('name'), parameters('env'), parameters('locationCode'))]"
    },
    "linkedInConnector": {
      "id": "[format('{0}/providers/Microsoft.Web/locations/{1}/managedApis/linkedinv2', subscription().id, parameters('location'))]",
      "connectionId": "[format('{0}/providers/Microsoft.Web/connections/{1}', resourceGroup().id, format(format(variables('metadata').longName, 'apicon', '-linkedin-{0}'), parameters('linkedInUsername')))]",
      "connectionName": "[format(format(variables('metadata').longName, 'apicon', '-linkedin-{0}'), parameters('linkedInUsername'))]",
      "location": "[parameters('location')]"
    },
    "logicApp": {
      "name": "[format(format(variables('metadata').longName, 'logapp', '-eventgrid-sub-handler-linkedin-{0}'), parameters('linkedInUsername'))]",
      "location": "[parameters('location')]"
    },
    "youtube": {
      "source": "[format('https://www.youtube.com/xml/feeds/videos.xml?channel_id={0}', parameters('youTubeChannelId'))]",
      "type": "[parameters('youTubeEventType')]",
      "titleSegment": "[parameters('youTubeTitleSegment')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('linkedInConnector').connectionName]",
      "location": "[variables('linkedInConnector').location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('linkedInConnector').connectionName]",
        "api": {
          "id": "[variables('linkedInConnector').id]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('logicApp').name]",
      "location": "[variables('logicApp').location]",
      "properties": {
        "state": "Enabled",
        "parameters": {
          "$connections": {
            "value": {
              "linkedin": {
                "id": "[variables('linkedInConnector').id]",
                "connectionId": "[variables('linkedInConnector').connectionId]",
                "connectionName": "[variables('linkedInConnector').connectionName]"
              }
            }
          }
        },
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "object",
              "defaultValue": {}
            },
            "acceptedYouTubeSource": {
              "type": "string",
              "defaultValue": "[variables('youtube').source]"
            },
            "acceptedYouTubeType": {
              "type": "string",
              "defaultValue": "[variables('youtube').type]"
            },
            "acceptedYouTubeTitleSegment": {
              "type": "string",
              "defaultValue": "[variables('youtube').titleSegment]"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "specversion": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "time": {
                      "type": "string"
                    },
                    "datacontenttype": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "channelId": {
                          "type": "string"
                        },
                        "videoId": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "link": {
                          "type": "string"
                        },
                        "thumbnailLink": {
                          "type": "string"
                        },
                        "datePublished": {
                          "type": "string"
                        },
                        "dateUpdated": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "actions": {
            "Proceed_Only_If_Accepted_Source": {
              "type": "If",
              "runAfter": {},
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@triggerBody()?['source']",
                      "@parameters('acceptedYouTubeSource')"
                    ]
                  },
                  {
                    "equals": [
                      "@triggerBody()?['type']",
                      "@parameters('acceptedYouTubeType')"
                    ]
                  }
                ]
              },
              "actions": {},
              "else": {
                "actions": {
                  "Cancel_Processing_Post": {
                    "type": "Terminate",
                    "runAfter": {},
                    "inputs": {
                      "runStatus": "Cancelled"
                    }
                  }
                }
              }
            },
            "Split_Title": {
              "type": "Compose",
              "runAfter": {
                "Proceed_Only_If_Accepted_Source": [
                  "Succeeded"
                ]
              },
              "inputs": "@split(triggerBody()?['data']?['title'], '|')"
            },
            "Process_Only_If_Title_Met": {
              "type": "If",
              "runAfter": {
                "Split_Title": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@trim(last(outputs('Split_Title')))",
                      "@parameters('acceptedYouTubeTitleSegment')"
                    ]
                  }
                ]
              },
              "actions": {
                "Build_LinkedIn_Post": {
                  "type": "Compose",
                  "runAfter": {},
                  "inputs": {
                    "title": "@{trim(first(outputs('Split_Title')))} | @{trim(first(skip(outputs('Split_Title'), 1)))}",
                    "body": "@triggerBody()?['data']?['description']",
                    "link": "@triggerBody()?['data']?['link']"
                  }
                }
              },
              "else": {
                "actions": {
                  "Cancel_Posting_LinkedIn": {
                    "type": "Terminate",
                    "runAfter": {},
                    "inputs": {
                      "runStatus": "Cancelled"
                    }
                  }
                }
              }
            },
            "Post_LinkedIn": {
              "type": "ApiConnection",
              "runAfter": {
                "Process_Only_If_Title_Met": [
                  "Succeeded"
                ]
              },
              "inputs": {
                "method": "POST",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['linkedin']['connectionId']"
                  }
                },
                "path": "/v2/people/shares",
                "body": {
                  "distribution": {
                    "linkedInDistributionTarget": {
                      "visibleToGuest": true
                    }
                  },
                  "text": {
                    "text": "@{outputs('Build_LinkedIn_Post')?['title']}\n\n@{outputs('Build_LinkedIn_Post')?['body']}"
                  },
                  "content": {
                    "content-url": "@outputs('Build_LinkedIn_Post')?['link']"
                  }
                }
              }
            }
          },
          "outputs": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('linkedInConnector').connectionName)]"
      ]
    }
  ],
  "outputs": {
    "logicAppName": {
      "type": "string",
      "value": "[variables('logicApp').name]"
    }
  }
}